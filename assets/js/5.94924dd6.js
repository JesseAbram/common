(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{245:function(a,t,e){"use strict";e.r(t);var r=e(2),i=Object(r.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"_0-91-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-91-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.91.1")]),a._v(" "),e("ul",[e("li",[a._v("ed25519/sr25519 sign & verify functions can now take the message input as Uint8Array/string/hex and verify allows for the signature/publicKey to be specified as Uint8Array/hex")]),a._v(" "),e("li",[a._v("Update "),e("code",[a._v("@polkadot/wasm")]),a._v(" to include a maintenace bump for the "),e("code",[a._v("w3f/schnorrkel")]),a._v(" libraries")])]),a._v(" "),e("h1",{attrs:{id:"_0-90-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-90-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.90.1")]),a._v(" "),e("ul",[e("li",[a._v("Moving towards 1.0")]),a._v(" "),e("li",[a._v("Added bnMin & bnMax functions")])]),a._v(" "),e("h1",{attrs:{id:"_0-76-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-76-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.76.1")]),a._v(" "),e("ul",[e("li",[a._v("Fix "),e("code",[a._v("addFromMnemonic")]),a._v(" to generate using new-style derivation.")]),a._v(" "),e("li",[a._v("Pull in formatBalance, formatDecimal, formatElapsed, formatNumber, calcSi, findSi & isTestChain util fuinctions from the originals in @polkadot/ui-util")]),a._v(" "),e("li",[a._v("Swap DB interfaces to optional LRU, removing transactionAsync (client-only changes)")]),a._v(" "),e("li",[a._v("Swap out "),e("code",[a._v("wasm-schnorrkel")]),a._v(" & "),e("code",[a._v("wasm-ed25519")]),a._v(" for combined version with "),e("code",[a._v("wasm-crypto")])])]),a._v(" "),e("h1",{attrs:{id:"_0-75-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-75-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.75.1")]),a._v(" "),e("ul",[e("li",[a._v("Start journey to 1.0")])]),a._v(" "),e("h1",{attrs:{id:"_0-42-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-42-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.42.1")]),a._v(" "),e("ul",[e("li",[a._v("Add assertSingletonPackage to util")]),a._v(" "),e("li",[a._v("Ensure that only a single keyring instance is loaded (uses above)")])]),a._v(" "),e("h1",{attrs:{id:"_0-41-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-41-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.41.1")]),a._v(" "),e("ul",[e("li",[a._v("Extensions to the client-specific database interfaces (non-breaking for API and util users)")])]),a._v(" "),e("h1",{attrs:{id:"_0-40-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-40-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.40.1")]),a._v(" "),e("ul",[e("li",[a._v("Add additional derivation path extraction mechanisms to util-crypto")]),a._v(" "),e("li",[a._v("Add createFromUri function to keypair (creates keypair, does not add it)")]),a._v(" "),e("li",[a._v("Allow all crypto hashing & ed25519 to use WASM (as available, JS fallbacks)")])]),a._v(" "),e("h1",{attrs:{id:"_0-39-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-39-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.39.1")]),a._v(" "),e("ul",[e("li",[a._v("Pull in bip39 generation functions from @poladkot/wasm-crypto with a fallback to the pure JS versions")])]),a._v(" "),e("h1",{attrs:{id:"_0-38-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-38-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.38.1")]),a._v(" "),e("ul",[e("li",[a._v("Align with current substrate master for sr25519 keys and hard/soft derivation")]),a._v(" "),e("li",[a._v("Swap default dev keys to derived (sr25519)")])]),a._v(" "),e("h1",{attrs:{id:"_0-37-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-37-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.37.1")]),a._v(" "),e("ul",[e("li",[a._v("Swap to publishing -beta.x on merge (non-breaking testing)")])]),a._v(" "),e("h1",{attrs:{id:"_0-36-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-36-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.36.1")]),a._v(" "),e("ul",[e("li",[a._v("Add "),e("code",[a._v("fromUri")]),a._v(" to keyring along with hard & soft key derivation.")])]),a._v(" "),e("h1",{attrs:{id:"_0-35-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-35-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.35.1")]),a._v(" "),e("ul",[e("li",[a._v("Remove NodeJs-only "),e("code",[a._v("syncify")]),a._v(" function, not exported by the package (with binary dependency for Node)")])]),a._v(" "),e("h1",{attrs:{id:"_0-34-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-34-1","aria-hidden":"true"}},[a._v("#")]),a._v(" 0.34.1")]),a._v(" "),e("ul",[e("li",[a._v("Keyring now allows for ed25519 and sr25519 instances. Upon creation, you need to pass the "),e("code",[a._v("ed25519")]),a._v("or "),e("code",[a._v("sr25519")]),a._v(" string to denote the type, i.e. "),e("code",[a._v("new Keyring({ type: 'sr25519' })")])])])])},[],!1,null,null,null);t.default=i.exports}}]);